export enum ErrorCodes {
  ERROR_NOT_FOUND = -1,
  ERROR_PERMISSION_DENIED = -2,
  ERROR_DEVICE_NOT_FOUND = -3,
  ERROR_METHOD_NOT_SUPPORTED = -4,
  ERROR_COMMUNICATION = -5,
  ERROR_CONNECTING_SERVICE = -6,
  ERROR_UNKNOWN_RESPONSE = -7,
  ERROR_SYNTAX = -8,
  ERROR_BROKEN_PIPE = -9,
  ERROR_COMMUNICATING_SERVICE = -10,
  ERROR_UNKNOWN = -99,
}

export enum ErrorMessages {
  ERROR_NOT_FOUND = 'TellStick not found',
  ERROR_PERMISSION_DENIED = 'Permission denied',
  ERROR_DEVICE_NOT_FOUND = 'Device not found',
  ERROR_METHOD_NOT_SUPPORTED = 'The method you tried to use is not supported by the device',
  ERROR_COMMUNICATION = 'An error occurred while communicating with TellStick',
  ERROR_CONNECTING_SERVICE = 'Could not connect to the Telldus Service',
  ERROR_UNKNOWN_RESPONSE = 'Received an unknown response',
  ERROR_SYNTAX = "Input/command could not be parsed or didn't follow input rules",
  ERROR_BROKEN_PIPE = 'Pipe broken during communication.',
  ERROR_COMMUNICATING_SERVICE = 'Timeout waiting for response from the Telldus Service.',
  ERROR_UNKNOWN = 'Unknown',
}

export enum Methods {
  TURNON = 1,
  TURNOFF = 2,
  BELL = 4,
  TOGGLE = 8,
  DIM = 16,
  LEARN = 32,
  EXECUTE = 64,
  UP = 128,
  DOWN = 256,
  STOP = 512,
}

export enum Commands {
  NUMBER_OF_DEVICES = 'tdGetNumberOfDevices',
  DEVICE_ID = 'tdGetDeviceId',
  DEVICE_TYPE = 'tdGetDeviceType',
  METHODS = 'tdMethods',
  NAME = 'tdGetName',
  TURN_ON = 'tdTurnOn',
  TURN_OFF = 'tdTurnOff',
  DIM = 'tdDim',
  LEARN = 'tdLearn',
  BELL = 'tdBell',
  EXECUTE = 'tdExecute',
  UP = 'tdUp',
  DOWN = 'tdDown',
  SET_NAME = 'tdSetName',
  GET_PROTOCOL = 'tdGetProtocol',
  SET_PROTOCOL = 'tdSetProtocol',
  GET_MODEL = 'tdGetModel',
  SET_MODEL = 'tdSetModel',
  SET_DEVICE_PARAMETER = 'tdSetDeviceParameter',
  GET_DEVICE_PARAMETER = 'tdGetDeviceParameter',
  ADD_DEVICE = 'tdAddDevice',
  REMOVE_DEVICE = 'tdRemoveDevice',
  SEND_RAW_COMMAND = 'tdSendRawCommand',
  CONNECT_TELLSTICK_CONTROLLER = 'tdConnectTellStickController',
  SENSORS = 'tdSensor',
  SENSOR_VALUE = 'tdSensorValue',
  CONTROLLERS = 'tdController',
  CONTROLLER_VALUE = 'tdControllerValue',
  SET_CONTROLLER_VALUE = 'tdSetControllerValue',
  REMOVE_CONTROLLER = 'tdRemoveController',
  LAST_SENT_VALUE = 'tdLastSentValue',
  LAST_SENT_COMMANDS = 'tdLastSentCommand',
}
